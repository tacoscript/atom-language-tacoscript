'scopeName': 'source.taco'
'name': 'TacoScript'
'fileTypes': [
  'taco',
  'tacos',
  'tacoscript'
]
'firstLineMatch': '^#!.*\\btaco'
'foldingStartMarker': '^\\s*(class)\\s+\\S.*$|.*\\*?((\\+?=|-|\\+)>>?\\s*$|.*[\\[{]\\s*$|\\b(if|else|while|case)\\b(?!.*?then)|\\b(try|finally|catch|((catch|switch)\\s+\\S.*))\\b\\s*$'
'foldingStopMarker': '^\\s*$|^\\s*[}\\]]\\s*$'
'patterns': [
  {
    'captures':
      '1':
        'name': 'variable.parameter.function.taco'
      '2':
        'name': 'storage.type.function.taco'
    'comment': 'match stuff like: a -> â€¦ '
    'match': '(\\([^()]*?\\))\\s*(\\*?(?:(\\+?=|-|\\+)>>?))'
    'name': 'meta.inline.function.taco'
  }
  {
    'captures':
      '1':
        'name': 'keyword.operator.new.taco'
      '4':
        'name': 'storage.type.class.taco'
      '6':
        'name': 'entity.name.type.instance.taco'
      '7':
        'name': 'entity.name.type.instance.taco'
    'match': '(new)\\s+(((class)(\\s+(\\w+(?:\\.\\w*)*))?)|(\\w+(?:\\.\\w*)*))'
    'name': 'meta.class.instance.constructor'
  }
  {
    'begin': '`'
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.string.begin.taco'
    'end': '`'
    'endCaptures':
      '0':
        'name': 'punctuation.definition.string.end.taco'
    'name': 'string.quoted.template.taco'
    'patterns': [
      {
        'match': '\\\\(x\\h{2}|[0-2][0-7]{0,2}|3[0-6][0-7]|37[0-7]?|[4-7][0-7]?|.)'
        'name': 'constant.character.escape.taco'
      }
      {
        'include': '#interpolated_taco'
      }
    ]
  }
  {
    'begin': '/(?=(?![ /*+?])([^\\\\]|\\\\.)*?/[igmy]{0,4}(?![a-zA-Z0-9]))'
    'end': '(/)[imgy]{0,4}'
    'name': 'string.regexp.taco'
    'patterns': [
      {
        'include': 'source.js.regexp'
      }
    ]
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.string.begin.js'
    'endCaptures':
      '1':
        'name': 'punctuation.definition.string.begin.js'
  }
  {
    'match': '(?<!\\.)\\b(class|enum|function|interface)(?!\\s*:)\\b'
    'name': 'storage.type.taco'
  }
  {
    'match': '(?<!\\.)\\b(async|export|extends|implements|private|protected|public|static)(?!\\s*:)\\b'
    'name': 'storage.modifier.taco'
  }
  {
    'match': '(?<!\\.)\\b(let|var|extern)(?!\\s*:)\\b'
    'name': 'storage.type.var.taco'
  }
  {
    'begin': '(?<!\\.)\\b(const)(?!\\s*:)\\b'
    'beginCaptures':
      '1':
        'name': 'storage.modifier.taco'
    'end': '(\\bof\\b|\\bin\\b)|(;)|(=)|(?<!,)\\n'
    'endCaptures':
      '1':
        'name': 'keyword.operator.$1.taco'
      '2':
        'name': 'punctuation.terminator.statement.taco'
      '3':
        'name': 'keyword.operator.assignment.taco'
    'patterns': [
      {
        'match': '([$_a-zA-Z][$_a-zA-Z0-9]*)\\s*(:)\\s*([$_a-zA-Z][$_a-zA-Z0-9]*)?'
        'captures':
          '2':
            'name': 'keyword.operator.assignment.taco'
          '3':
            'name': 'constant.other.taco'
      }
      {
        'match': '([$_a-zA-Z][$_a-zA-Z0-9]*)'
        'captures':
          '1':
            'name': 'constant.other.taco'
      }
      {
        'match': '\\.\\.\\.'
        'name': 'keyword.operator.spread.taco'
      }
      {
        'match': ','
        'name': 'meta.delimiter.object.comma.taco'
      }
      {
        'match': '\\(|\\)'
        'name': 'meta.brace.round.taco'
      }
      {
        'match': '{|}'
        'name': 'meta.brace.curly.taco'
      }
      {
        'match': '\\[|\\]'
        'name': 'meta.brace.square.taco'
      }
      {
        'include': '#comments'
      }
    ]
  }
  {
    'match': '(?<!\\.)\\b(yield)(?!\\s*:)\\b(?:\\s*(\\*))?|(?<=\\?)(?:\\s*)(yield)(?=\\s*:)',
    'captures':
      '1':
        'name': 'keyword.control.taco'
      '2':
        'name': 'storage.modifier.taco'
      '3':
        'name': 'keyword.control.taco'
      '4':
        'name': 'storage.modifier.taco'
    'name': 'meta.control.yield.taco'
  }
  {
    'match': '\\b(?<![\\.\\$])(await|break|by|case|catch|continue|else|finally|for|if|import|from|package|return|switch|then|throw|try|unless|with|while|until|do|upto|downto|(?<=for)\\s+own)(?!\\s*:)\\b'
    'name': 'keyword.control.taco'
  }
  {
    'match': '(?<!\\.)\\b(default)\\b'
    'name': 'keyword.control.taco'
  }
  {
    'match': '(?<!\\.)\\b(delete|in|of|instanceof|new|typeof|void)(?!\\s*:)\\b'
    'name': 'keyword.operator.$1.taco'
  }
  {
    'match': '\\.\\.\\.'
    'name': 'keyword.operator.spread.taco'
  }
  {
    'match': '(and|or|<<|>>>?|(?<!\\()\\/|[=!<>*%+\\-&^])?=(?!>)|[%^*\\/~?:]|\\-?\\-(?!>)|\\+\\+?|<>|<|>|&|\\||\\b(?<![\\.\\$])(and|or|is|isnt|not|super)(?!\\s*:)\\b'
    'name': 'keyword.operator.taco'
  }
  {
    'match': '\\b(?<![\\.\\$])(async|enum|native)(?!\\s*:)\\b'
    'name': 'keyword.reserved.taco'
  }
  {
    'captures':
      '1':
        'name': 'variable.assignment.taco'
      '4':
        'name': 'punctuation.separator.key-value'
      '5':
        'name': 'keyword.operator.taco'
    'match': '([a-zA-Z\\$_](\\w|\\$|\\.)*\\s*(?!\\::)((:)|((?:or|and|[-+/&%*?])?=)(?![>=]))(?!(\\s*\\(.*\\))?\\s*(\\*?(?:(\\+?=|-|\\+)>>?))))'
    'name': 'variable.assignment.taco'
  }
  {
    'begin': '(?<=\\s|^)(\\{)(?=.+?\\}\\s+[:=])'
    'beginCaptures':
      '0':
        'name': 'keyword.operator.taco'
    'end': '(\\}\\s*[:=])'
    'endCaptures':
      '0':
        'name': 'keyword.operator.taco'
    'name': 'meta.variable.assignment.destructured.object.taco'
    'patterns': [
      {
        'include': '#variable_name'
      }
      {
        'include': '#instance_variable'
      }
      {
        'include': '#single_quoted_string'
      }
      {
        'include': '#double_quoted_string'
      }
      {
        'include': '#numbers'
      }
    ]
  }
  {
    'begin': '(?<=\\s|^)(\\[)(?=.+?\\]\\s+[:=])'
    'beginCaptures':
      '0':
        'name': 'keyword.operator.taco'
    'end': '(\\]\\s*[:=])'
    'endCaptures':
      '0':
        'name': 'keyword.operator.taco'
    'name': 'meta.variable.assignment.destructured.array.taco'
    'patterns': [
      {
        'include': '#variable_name'
      }
      {
        'include': '#instance_variable'
      }
      {
        'include': '#single_quoted_string'
      }
      {
        'include': '#double_quoted_string'
      }
      {
        'include': '#numbers'
      }
    ]
  }
  {
    'captures':
      '1':
        'name': 'entity.name.function.taco'
      '3':
        'name': 'variable.parameter.function.taco'
      '4':
        'name': 'storage.type.function.taco'
    'match': '(?<=^|\\s)(?=@?[a-zA-Z\\$_])(@?[a-zA-Z\\$_](\\w|:|\\.)*\\s*?(?=[:=](\\s*\\(.*\\))?\\s*(\\*?(?:(\\+?=|-|\\+)>>?))))'
    'name': 'meta.function.taco'
  }
  {
    'match': '\\b(?<!\\.|::)(true|on|yes)(?!\\s*[:=][^=])\\b'
    'name': 'constant.language.boolean.true.taco'
  }
  {
    'match': '\\b(?<!\\.|::)(false|off|no)(?!\\s*[:=][^=])\\b'
    'name': 'constant.language.boolean.false.taco'
  }
  {
    'match': '@?\\b(?!class|subclass|extends|decodeURI(Component)?|encodeURI(Component)?|eval|parse(Float|Int)|require)\\w+(\\s+(?!(of|in|then|is|isnt|and|or|for|else|when|not|if)\\s)(?=(@?\\w+|\\->|\\-\\d|\\[|\\{|\"|\'))|(?=[\\(!]))'
    'name': 'entity.name.function.taco'
  }
  {
    'match': '(\\*?(?:(\\+?=|-|\\+)>>?))'
    'name': 'storage.type.function.taco'
  }
  {
    'match': '\\b(?<!\\.|::)null(?!\\s*[:=][^=])\\b'
    'name': 'constant.language.null.taco'
  }
  {
    'match': '\\b(?<!\\.|::)extends(?!\\s*[:=])\\b'
    'name': 'variable.language.taco'
  }
  {
    'match': '\\b(?<!\\.)this(?!\\s*[:=][^=])\\b'
    'name': 'variable.language.this.taco'
  }
  {
    'captures':
      '1':
        'name': 'storage.type.class.taco'
      '2':
        'name': 'keyword.control.inheritance.taco'
      '3':
        'name': 'entity.other.inherited-class.taco'
    'match': '(?<=\\s|^|\\[|\\()(class)\\s+(extends)\\s+(@?[a-zA-Z\\$\\._][\\w\\.]*)'
    'name': 'meta.class.taco'
  }
  {
    'captures':
      '1':
        'name': 'storage.type.class.taco'
      '2':
        'name': 'entity.name.type.class.taco'
      '3':
        'name': 'keyword.control.inheritance.taco'
      '4':
        'name': 'entity.other.inherited-class.taco'
    'match': '(?<=\\s|^|\\[|\\()(class\\b)\\s+(@?[a-zA-Z\\$_][\\w\\.]*)?(?:\\s+(extends)\\s+(@?[a-zA-Z\\$\\._][\\w\\.]*))?'
    'name': 'meta.class.taco'
  }
  {
    'match': '\\b(debugger|\\\\)\\b'
    'name': 'keyword.other.taco'
  }
  {
    'match': '\\b(Array|ArrayBuffer|Blob|Boolean|Date|document|Function|Int(8|16|32|64)Array|Math|Map|Number|Object|Proxy|RegExp|Set|String|WeakMap|window|Uint(8|16|32|64)Array|XMLHttpRequest)\\b'
    'name': 'support.class.taco'
  }
  {
    'match': '\\b(console)\\b'
    'name': 'entity.name.type.object.taco'
  }
  {
    'match': '((?<=console\\.)(debug|warn|info|log|error|time|timeEnd|assert))\\b'
    'name': 'support.function.console.taco'
  }
  {
    'match': '\\b(decodeURI(Component)?|encodeURI(Component)?|eval|parse(Float|Int)|require)\\b'
    'name': 'support.function.taco'
  }
  {
    'match': '((?<=\\.)(apply|call|concat|every|filter|forEach|from|hasOwnProperty|indexOf|isPrototypeOf|join|lastIndexOf|map|of|pop|propertyIsEnumerable|push|reduce(Right)?|reverse|shift|slice|some|sort|splice|to(Locale)?String|unshift|valueOf))\\b'
    'name': 'support.function.method.array.taco'
  }
  {
    'match': '((?<=Array\\.)(isArray))\\b'
    'name': 'support.function.static.array.taco'
  }
  {
    'match': '((?<=Object\\.)(create|definePropert(ies|y)|freeze|getOwnProperty(Descriptors?|Names)|getProperty(Descriptor|Names)|getPrototypeOf|is(Extensible|Frozen|Sealed)?|isnt|keys|preventExtensions|seal))\\b'
    'name': 'support.function.static.object.taco'
  }
  {
    'match': '((?<=Math\\.)(abs|acos|acosh|asin|asinh|atan|atan2|atanh|ceil|cos|cosh|exp|expm1|floor|hypot|log|log10|log1p|log2|max|min|pow|random|round|sign|sin|sinh|sqrt|tan|tanh|trunc))\\b'
    'name': 'support.function.static.math.taco'
  }
  {
    'match': '((?<=Number\\.)(is(Finite|Integer|NaN)|toInteger))\\b'
    'name': 'support.function.static.number.taco'
  }
  {
    'match': '(?<!\\.)\\b(module|exports|__filename|__dirname|global|process)(?!\\s*:)\\b'
    'name': 'support.variable.taco'
  }
  {
    'match': '\\b(Infinity|NaN|undefined)\\b'
    'name': 'constant.language.taco'
  }
  {
    'match': '\\;'
    'name': 'punctuation.terminator.statement.taco'
  }
  {
    'match': ',[ |\\t]*'
    'name': 'meta.delimiter.object.comma.taco'
  }
  {
    'match': '\\.'
    'name': 'meta.delimiter.method.period.taco'
  }
  {
    'match': '\\{|\\}'
    'name': 'meta.brace.curly.taco'
  }
  {
    'match': '\\(|\\)'
    'name': 'meta.brace.round.taco'
  }
  {
    'match': '\\[|\\]\\s*'
    'name': 'meta.brace.square.taco'
  }
  {
    'include': '#comments'
  }
  {
    'include': '#instance_variable'
  }
  {
    'include': '#single_quoted_string'
  }
  {
    'include': '#double_quoted_string'
  }
  {
    'include': '#numbers'
  }
]
'repository':
  'double_quoted_string':
    'patterns': [
      {
        'begin': '"'
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.string.begin.taco'
        'end': '"'
        'endCaptures':
          '0':
            'name': 'punctuation.definition.string.end.taco'
        'name': 'string.quoted.double.taco'
        'patterns': [
          {
            'match': '\\\\(x\\h{2}|[0-2][0-7]{0,2}|3[0-6][0-7]|37[0-7]?|[4-7][0-7]?|.)'
            'name': 'constant.character.escape.taco'
          }
          {
            'include': '#interpolated_taco'
          }
        ]
      }
    ]
  'embedded_comment':
    'patterns': [
      {
        'captures':
          '1':
            'name': 'punctuation.definition.comment.taco'
        'match': '(?<!\\\\)(#).*$\\n?'
        'name': 'comment.line.number-sign.taco'
      }
    ]
  'docblock':
    'patterns': [
      {
        'match': '(?<!\\w)@(abstract|access|alias|augments|author|async|attribute|arg|argument|beta|borrows|bubbes|callback|class|classdesc|config|const|constant|constructs|constructor|copyright|chainable|default|defaultvalue|deprecated|desc|description|enum|emits|event|example|exports|external|extends|extension|extensionfor|extension_for|for|file|fileoverview|fires|final|function|global|host|ignore|implements|inheritdoc|inner|instance|interface|kind|lends|license|listens|main|member|memberof|method|mixex|mixin(?:s|)|module|name|namespace|override|overview|param|private|prop|property|protected|readonly|readOnly|requires|required|return|returns|see|since|static|summary|submodule|this|throws|todo|tutorial|type|typedef|var|variation|version|virtual|uses|writeOnce)\\b'
        'name': 'storage.type.class.jsdoc'
      }
    ]
  'comments':
    'patterns': [
      {
        'begin': '(?<!#)###(?!#)'
        'captures':
          '0':
            'name': 'punctuation.definition.comment.taco'
        'end': '###(?:[ \\t]*\\n)'
        'name': 'comment.block.preprocessor.taco'
      }
      {
        'begin': '#\\*\\*(?!/)'
        'captures':
          '0':
            'name': 'punctuation.definition.comment.taco'
        'patterns': [
          {
            'include': '#docblock'
          }
        ]
        'end': '\\*#'
        'name': 'comment.block.documentation.taco'
      }
      {
        'begin': '#\\*'
        'captures':
          '0':
            'name': 'punctuation.definition.comment.taco'
        'end': '\\*#'
        'name': 'comment.block.taco'
      }
      {
        'begin': '(^[ \\t]+)?(?=#(?!\\*))'
        'beginCaptures':
          '1':
            'name': 'punctuation.whitespace.comment.leading.taco'
        'end': '(?!\\G)'
        'patterns': [
          {
            'begin': '#'
            'beginCaptures':
              '0':
                'name': 'punctuation.definition.comment.taco'
            'end': '\\n'
            'name': 'comment.line.number-sign.taco'
          }
        ]
      }
    ]
  'instance_variable':
    'patterns': [
      {
        'match': '(@)([a-zA-Z_\\$]\\w*)?'
        'name': 'variable.other.readwrite.instance.taco'
      }
    ]
  'interpolated_taco':
    'patterns': [
      {
        'begin': '\\$\\{'
        'captures':
          '0':
            'name': 'punctuation.section.embedded.taco'
        'end': '\\}'
        'name': 'source.taco.embedded.source'
        'patterns': [
          {
            'include': '$self'
          }
        ]
      }
    ]
  'numbers':
    'patterns': [
      {
        'match': '\\b(?<!\\$)0(x|X)[0-9a-fA-F]+\\b(?!\\$)'
        'name': 'constant.numeric.hex.taco'
      }
      {
        'match': '\\b(?<!\\$)0(b|B)[01]+\\b(?!\\$)'
        'name': 'constant.numeric.binary.taco'
      }
      {
        'match': '\\b(?<!\\$)0(o|O)?[0-7]+\\b(?!\\$)'
        'name': 'constant.numeric.octal.taco'
      }
      {
        'match': '''(?x)
          (?<!\\$)(?:
            (?:\\b[0-9]+(\\.)[0-9]+[eE][+-]?[0-9]+\\b)| # 1.1E+3
            (?:\\b[0-9]+(\\.)[eE][+-]?[0-9]+\\b)|       # 1.E+3
            (?:\\B(\\.)[0-9]+[eE][+-]?[0-9]+\\b)|       # .1E+3
            (?:\\b[0-9]+[eE][+-]?[0-9]+\\b)|            # 1E+3
            (?:\\b[0-9]+(\\.)[0-9]+\\b)|                # 1.1
            (?:\\b[0-9]+(\\.)\\B)|                      # 1.
            (?:\\B(\\.)[0-9]+\\b)|                      # .1
            (?:\\b[0-9]+\\b(?!\\.))                     # 1
          )(?!\\$)
        '''
        'captures':
          '0':
            'name': 'constant.numeric.decimal.taco'
          '1':
            'name': 'meta.delimiter.decimal.period.taco'
          '2':
            'name': 'meta.delimiter.decimal.period.taco'
          '3':
            'name': 'meta.delimiter.decimal.period.taco'
          '4':
            'name': 'meta.delimiter.decimal.period.taco'
          '5':
            'name': 'meta.delimiter.decimal.period.taco'
          '6':
            'name': 'meta.delimiter.decimal.period.taco'
      }
    ]
  'single_quoted_string':
    'patterns': [
      {
        'begin': '\''
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.string.begin.taco'
        'end': '\''
        'endCaptures':
          '0':
            'name': 'punctuation.definition.string.end.taco'
        'name': 'string.quoted.single.taco'
        'patterns': [
          {
            'match': '\\\\(x\\h{2}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.)'
            'name': 'constant.character.escape.taco'
          }
        ]
      }
    ]
  'variable_name':
    'patterns': [
      {
        'captures':
          '1':
            'name': 'variable.assignment.taco'
        'match': '([a-zA-Z\\$_]\\w*(\\.\\w+)*)'
        'name': 'variable.assignment.taco'
      }
    ]
  'regex-character-class':
    'patterns': [
      {
        'match': '\\\\[wWsSdD]|\\.'
        'name': 'constant.character.character-class.regexp'
      }
      {
        'match': '\\\\([0-7]{3}|x\\h\\h|u\\h\\h\\h\\h)'
        'name': 'constant.character.numeric.regexp'
      }
      {
        'match': '\\\\c[A-Z]'
        'name': 'constant.character.control.regexp'
      }
      {
        'match': '\\\\.'
        'name': 'constant.character.escape.backslash.regexp'
      }
    ]
  'heregexp':
    'patterns': [
      {
        'match': '\\\\[bB]|\\^|\\$'
        'name': 'keyword.control.anchor.regexp'
      }
      {
        'match': '\\\\[1-9]\\d*'
        'name': 'keyword.other.back-reference.regexp'
      }
      {
        'match': '[?+*]|\\{(\\d+,\\d+|\\d+,|,\\d+|\\d+)\\}\\??'
        'name': 'keyword.operator.quantifier.regexp'
      }
      {
        'match': '\\|'
        'name': 'keyword.operator.or.regexp'
      }
      {
        'begin': '(\\()((\\?=)|(\\?!))'
        'beginCaptures':
          '1':
            'name': 'punctuation.definition.group.regexp'
          '3':
            'name': 'meta.assertion.look-ahead.regexp'
          '4':
            'name': 'meta.assertion.negative-look-ahead.regexp'
        'end': '(\\))'
        'endCaptures':
          '1':
            'name': 'punctuation.definition.group.regexp'
        'name': 'meta.group.assertion.regexp'
        'patterns': [
          {
            'include': '#heregexp'
          }
        ]
      }
      {
        'begin': '\\((\\?:)?'
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.group.regexp'
        'end': '\\)'
        'endCaptures':
          '0':
            'name': 'punctuation.definition.group.regexp'
        'name': 'meta.group.regexp'
        'patterns': [
          {
            'include': '#heregexp'
          }
        ]
      }
      {
        'begin': '(\\[)(\\^)?'
        'beginCaptures':
          '1':
            'name': 'punctuation.definition.character-class.regexp'
          '2':
            'name': 'keyword.operator.negation.regexp'
        'end': '(\\])'
        'endCaptures':
          '1':
            'name': 'punctuation.definition.character-class.regexp'
        'name': 'constant.other.character-class.set.regexp'
        'patterns': [
          {
            'captures':
              '1':
                'name': 'constant.character.numeric.regexp'
              '2':
                'name': 'constant.character.control.regexp'
              '3':
                'name': 'constant.character.escape.backslash.regexp'
              '4':
                'name': 'constant.character.numeric.regexp'
              '5':
                'name': 'constant.character.control.regexp'
              '6':
                'name': 'constant.character.escape.backslash.regexp'
            'match': '(?:.|(\\\\(?:[0-7]{3}|x\\h\\h|u\\h\\h\\h\\h))|(\\\\c[A-Z])|(\\\\.))\\-(?:[^\\]\\\\]|(\\\\(?:[0-7]{3}|x\\h\\h|u\\h\\h\\h\\h))|(\\\\c[A-Z])|(\\\\.))'
            'name': 'constant.other.character-class.range.regexp'
          }
          {
            'include': '#regex-character-class'
          }
        ]
      }
      {
        'include': '#regex-character-class'
      }
      {
        'include': '#embedded_comment'
      }
    ]
